// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: i18n.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionTypes int32

const (
	ActionTypes_List        ActionTypes = 0
	ActionTypes_AddOrUpdate ActionTypes = 1
	ActionTypes_Delete      ActionTypes = 2
	ActionTypes_Get         ActionTypes = 3
)

// Enum value maps for ActionTypes.
var (
	ActionTypes_name = map[int32]string{
		0: "List",
		1: "AddOrUpdate",
		2: "Delete",
		3: "Get",
	}
	ActionTypes_value = map[string]int32{
		"List":        0,
		"AddOrUpdate": 1,
		"Delete":      2,
		"Get":         3,
	}
)

func (x ActionTypes) Enum() *ActionTypes {
	p := new(ActionTypes)
	*p = x
	return p
}

func (x ActionTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_i18n_proto_enumTypes[0].Descriptor()
}

func (ActionTypes) Type() protoreflect.EnumType {
	return &file_i18n_proto_enumTypes[0]
}

func (x ActionTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionTypes.Descriptor instead.
func (ActionTypes) EnumDescriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{0}
}

type ReplyCode int32

const (
	ReplyCode_Success       ReplyCode = 0
	ReplyCode_Error         ReplyCode = 1
	ReplyCode_NotFound      ReplyCode = 2
	ReplyCode_DataBaseError ReplyCode = 3
	ReplyCode_InvalidParam  ReplyCode = 4
	ReplyCode_InvalidData   ReplyCode = 5
	ReplyCode_InvalidAction ReplyCode = 6
	ReplyCode_DataExists    ReplyCode = 7
	ReplyCode_DataNotExists ReplyCode = 8
)

// Enum value maps for ReplyCode.
var (
	ReplyCode_name = map[int32]string{
		0: "Success",
		1: "Error",
		2: "NotFound",
		3: "DataBaseError",
		4: "InvalidParam",
		5: "InvalidData",
		6: "InvalidAction",
		7: "DataExists",
		8: "DataNotExists",
	}
	ReplyCode_value = map[string]int32{
		"Success":       0,
		"Error":         1,
		"NotFound":      2,
		"DataBaseError": 3,
		"InvalidParam":  4,
		"InvalidData":   5,
		"InvalidAction": 6,
		"DataExists":    7,
		"DataNotExists": 8,
	}
)

func (x ReplyCode) Enum() *ReplyCode {
	p := new(ReplyCode)
	*p = x
	return p
}

func (x ReplyCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplyCode) Descriptor() protoreflect.EnumDescriptor {
	return file_i18n_proto_enumTypes[1].Descriptor()
}

func (ReplyCode) Type() protoreflect.EnumType {
	return &file_i18n_proto_enumTypes[1]
}

func (x ReplyCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReplyCode.Descriptor instead.
func (ReplyCode) EnumDescriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{1}
}

type CultureCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CultureCodeRequest) Reset() {
	*x = CultureCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CultureCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CultureCodeRequest) ProtoMessage() {}

func (x *CultureCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CultureCodeRequest.ProtoReflect.Descriptor instead.
func (*CultureCodeRequest) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{0}
}

func (x *CultureCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type CultureResourcesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items   []*CultureResourceItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Code    ReplyCode              `protobuf:"varint,2,opt,name=code,proto3,enum=i18n.ReplyCode" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CultureResourcesReply) Reset() {
	*x = CultureResourcesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CultureResourcesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CultureResourcesReply) ProtoMessage() {}

func (x *CultureResourcesReply) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CultureResourcesReply.ProtoReflect.Descriptor instead.
func (*CultureResourcesReply) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{1}
}

func (x *CultureResourcesReply) GetItems() []*CultureResourceItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CultureResourcesReply) GetCode() ReplyCode {
	if x != nil {
		return x.Code
	}
	return ReplyCode_Success
}

func (x *CultureResourcesReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CultureResourceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`   // 语言资源key
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"` // 语言翻译
}

func (x *CultureResourceItem) Reset() {
	*x = CultureResourceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CultureResourceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CultureResourceItem) ProtoMessage() {}

func (x *CultureResourceItem) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CultureResourceItem.ProtoReflect.Descriptor instead.
func (*CultureResourceItem) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{2}
}

func (x *CultureResourceItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CultureResourceItem) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type CultureBaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    ReplyCode `protobuf:"varint,1,opt,name=code,proto3,enum=i18n.ReplyCode" json:"code,omitempty"`
	Message string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CultureBaseReply) Reset() {
	*x = CultureBaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CultureBaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CultureBaseReply) ProtoMessage() {}

func (x *CultureBaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CultureBaseReply.ProtoReflect.Descriptor instead.
func (*CultureBaseReply) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{3}
}

func (x *CultureBaseReply) GetCode() ReplyCode {
	if x != nil {
		return x.Code
	}
	return ReplyCode_Success
}

func (x *CultureBaseReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CulturesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    ActionTypes  `protobuf:"varint,1,opt,name=action,proto3,enum=i18n.ActionTypes" json:"action,omitempty"`
	ParamData *CultureItem `protobuf:"bytes,2,opt,name=param_data,json=paramData,proto3" json:"param_data,omitempty"`
	Index     int32        `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Size      int32        `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *CulturesRequest) Reset() {
	*x = CulturesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CulturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CulturesRequest) ProtoMessage() {}

func (x *CulturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CulturesRequest.ProtoReflect.Descriptor instead.
func (*CulturesRequest) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{4}
}

func (x *CulturesRequest) GetAction() ActionTypes {
	if x != nil {
		return x.Action
	}
	return ActionTypes_List
}

func (x *CulturesRequest) GetParamData() *CultureItem {
	if x != nil {
		return x.ParamData
	}
	return nil
}

func (x *CulturesRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CulturesRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CulturesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items   []*CultureItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total   int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Code    ReplyCode      `protobuf:"varint,3,opt,name=code,proto3,enum=i18n.ReplyCode" json:"code,omitempty"`
	Message string         `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CulturesReply) Reset() {
	*x = CulturesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CulturesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CulturesReply) ProtoMessage() {}

func (x *CulturesReply) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CulturesReply.ProtoReflect.Descriptor instead.
func (*CulturesReply) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{5}
}

func (x *CulturesReply) GetItems() []*CultureItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CulturesReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CulturesReply) GetCode() ReplyCode {
	if x != nil {
		return x.Code
	}
	return ReplyCode_Success
}

func (x *CulturesReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CultureItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                             // 语言名称
	Code      string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`                             // 语言代码
	IsDefault bool   `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"` // 是否默认语言
}

func (x *CultureItem) Reset() {
	*x = CultureItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CultureItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CultureItem) ProtoMessage() {}

func (x *CultureItem) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CultureItem.ProtoReflect.Descriptor instead.
func (*CultureItem) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{6}
}

func (x *CultureItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CultureItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CultureItem) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CultureItem) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type CultureTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action     ActionTypes      `protobuf:"varint,1,opt,name=action,proto3,enum=i18n.ActionTypes" json:"action,omitempty"`
	ParamData  *CultureTypeItem `protobuf:"bytes,2,opt,name=param_data,json=paramData,proto3" json:"param_data,omitempty"`
	Index      int32            `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Size       int32            `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	CultureIds []int32          `protobuf:"varint,5,rep,packed,name=culture_ids,json=cultureIds,proto3" json:"culture_ids,omitempty"`
}

func (x *CultureTypesRequest) Reset() {
	*x = CultureTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CultureTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CultureTypesRequest) ProtoMessage() {}

func (x *CultureTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CultureTypesRequest.ProtoReflect.Descriptor instead.
func (*CultureTypesRequest) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{7}
}

func (x *CultureTypesRequest) GetAction() ActionTypes {
	if x != nil {
		return x.Action
	}
	return ActionTypes_List
}

func (x *CultureTypesRequest) GetParamData() *CultureTypeItem {
	if x != nil {
		return x.ParamData
	}
	return nil
}

func (x *CultureTypesRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CultureTypesRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CultureTypesRequest) GetCultureIds() []int32 {
	if x != nil {
		return x.CultureIds
	}
	return nil
}

type CulturesTypesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items   []*CultureTypeItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total   int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Code    ReplyCode          `protobuf:"varint,3,opt,name=code,proto3,enum=i18n.ReplyCode" json:"code,omitempty"`
	Message string             `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CulturesTypesReply) Reset() {
	*x = CulturesTypesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CulturesTypesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CulturesTypesReply) ProtoMessage() {}

func (x *CulturesTypesReply) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CulturesTypesReply.ProtoReflect.Descriptor instead.
func (*CulturesTypesReply) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{8}
}

func (x *CulturesTypesReply) GetItems() []*CultureTypeItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CulturesTypesReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CulturesTypesReply) GetCode() ReplyCode {
	if x != nil {
		return x.Code
	}
	return ReplyCode_Success
}

func (x *CulturesTypesReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CultureTypeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`     // 语言资源类型名称
	Remark string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"` // 备注
}

func (x *CultureTypeItem) Reset() {
	*x = CultureTypeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CultureTypeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CultureTypeItem) ProtoMessage() {}

func (x *CultureTypeItem) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CultureTypeItem.ProtoReflect.Descriptor instead.
func (*CultureTypeItem) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{9}
}

func (x *CultureTypeItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CultureTypeItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CultureTypeItem) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type CultureKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    ActionTypes     `protobuf:"varint,1,opt,name=action,proto3,enum=i18n.ActionTypes" json:"action,omitempty"`
	ParamData *CultureKeyItem `protobuf:"bytes,2,opt,name=param_data,json=paramData,proto3" json:"param_data,omitempty"`
	Index     int32           `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Size      int32           `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *CultureKeysRequest) Reset() {
	*x = CultureKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CultureKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CultureKeysRequest) ProtoMessage() {}

func (x *CultureKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CultureKeysRequest.ProtoReflect.Descriptor instead.
func (*CultureKeysRequest) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{10}
}

func (x *CultureKeysRequest) GetAction() ActionTypes {
	if x != nil {
		return x.Action
	}
	return ActionTypes_List
}

func (x *CultureKeysRequest) GetParamData() *CultureKeyItem {
	if x != nil {
		return x.ParamData
	}
	return nil
}

func (x *CultureKeysRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CultureKeysRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CultureKeysReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items   []*CultureKeyItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total   int64             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Code    ReplyCode         `protobuf:"varint,3,opt,name=code,proto3,enum=i18n.ReplyCode" json:"code,omitempty"`
	Message string            `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CultureKeysReply) Reset() {
	*x = CultureKeysReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CultureKeysReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CultureKeysReply) ProtoMessage() {}

func (x *CultureKeysReply) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CultureKeysReply.ProtoReflect.Descriptor instead.
func (*CultureKeysReply) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{11}
}

func (x *CultureKeysReply) GetItems() []*CultureKeyItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CultureKeysReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CultureKeysReply) GetCode() ReplyCode {
	if x != nil {
		return x.Code
	}
	return ReplyCode_Success
}

func (x *CultureKeysReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CultureKeyItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                         // 语言资源key名称
	TypeId   int32  `protobuf:"varint,3,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`      // 语言资源类型ID
	TypeName string `protobuf:"bytes,4,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"` // 语言资源类型名称
}

func (x *CultureKeyItem) Reset() {
	*x = CultureKeyItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CultureKeyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CultureKeyItem) ProtoMessage() {}

func (x *CultureKeyItem) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CultureKeyItem.ProtoReflect.Descriptor instead.
func (*CultureKeyItem) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{12}
}

func (x *CultureKeyItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CultureKeyItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CultureKeyItem) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *CultureKeyItem) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

type CultureKeyValuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    ActionTypes          `protobuf:"varint,1,opt,name=action,proto3,enum=i18n.ActionTypes" json:"action,omitempty"`
	ParamData *CultureKeyValueItem `protobuf:"bytes,2,opt,name=param_data,json=paramData,proto3" json:"param_data,omitempty"`
	Index     int32                `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Size      int32                `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	SearchKey string               `protobuf:"bytes,5,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"` // 搜索Key名
}

func (x *CultureKeyValuesRequest) Reset() {
	*x = CultureKeyValuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CultureKeyValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CultureKeyValuesRequest) ProtoMessage() {}

func (x *CultureKeyValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CultureKeyValuesRequest.ProtoReflect.Descriptor instead.
func (*CultureKeyValuesRequest) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{13}
}

func (x *CultureKeyValuesRequest) GetAction() ActionTypes {
	if x != nil {
		return x.Action
	}
	return ActionTypes_List
}

func (x *CultureKeyValuesRequest) GetParamData() *CultureKeyValueItem {
	if x != nil {
		return x.ParamData
	}
	return nil
}

func (x *CultureKeyValuesRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CultureKeyValuesRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CultureKeyValuesRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type CultureKeyValuesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items   []*CultureKeyValueItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total   int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Code    ReplyCode              `protobuf:"varint,3,opt,name=code,proto3,enum=i18n.ReplyCode" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CultureKeyValuesReply) Reset() {
	*x = CultureKeyValuesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CultureKeyValuesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CultureKeyValuesReply) ProtoMessage() {}

func (x *CultureKeyValuesReply) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CultureKeyValuesReply.ProtoReflect.Descriptor instead.
func (*CultureKeyValuesReply) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{14}
}

func (x *CultureKeyValuesReply) GetItems() []*CultureKeyValueItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CultureKeyValuesReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CultureKeyValuesReply) GetCode() ReplyCode {
	if x != nil {
		return x.Code
	}
	return ReplyCode_Success
}

func (x *CultureKeyValuesReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CultureKeyValueItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CultureId int32  `protobuf:"varint,2,opt,name=culture_id,json=cultureId,proto3" json:"culture_id,omitempty"` // 语言ID
	KeyId     int32  `protobuf:"varint,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`             // 语言资源key ID
	Text      string `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`                             // 语言翻译
}

func (x *CultureKeyValueItem) Reset() {
	*x = CultureKeyValueItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CultureKeyValueItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CultureKeyValueItem) ProtoMessage() {}

func (x *CultureKeyValueItem) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CultureKeyValueItem.ProtoReflect.Descriptor instead.
func (*CultureKeyValueItem) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{15}
}

func (x *CultureKeyValueItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CultureKeyValueItem) GetCultureId() int32 {
	if x != nil {
		return x.CultureId
	}
	return 0
}

func (x *CultureKeyValueItem) GetKeyId() int32 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *CultureKeyValueItem) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type AddCultureKeyValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string             `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`                      // 语言资源key
	Values []*CultureKeyValue `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`                // 语言翻译
	TypeId int32              `protobuf:"varint,3,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"` // 语言资源类型ID
}

func (x *AddCultureKeyValueRequest) Reset() {
	*x = AddCultureKeyValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCultureKeyValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCultureKeyValueRequest) ProtoMessage() {}

func (x *AddCultureKeyValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCultureKeyValueRequest.ProtoReflect.Descriptor instead.
func (*AddCultureKeyValueRequest) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{16}
}

func (x *AddCultureKeyValueRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AddCultureKeyValueRequest) GetValues() []*CultureKeyValue {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *AddCultureKeyValueRequest) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

type CultureKeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CultureId int32  `protobuf:"varint,2,opt,name=culture_id,json=cultureId,proto3" json:"culture_id,omitempty"` // 语言ID
	Text      string `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`                             // 语言翻译
}

func (x *CultureKeyValue) Reset() {
	*x = CultureKeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_i18n_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CultureKeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CultureKeyValue) ProtoMessage() {}

func (x *CultureKeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_i18n_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CultureKeyValue.ProtoReflect.Descriptor instead.
func (*CultureKeyValue) Descriptor() ([]byte, []int) {
	return file_i18n_proto_rawDescGZIP(), []int{17}
}

func (x *CultureKeyValue) GetCultureId() int32 {
	if x != nil {
		return x.CultureId
	}
	return 0
}

func (x *CultureKeyValue) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var File_i18n_proto protoreflect.FileDescriptor

var file_i18n_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x69, 0x31,
	0x38, 0x6e, 0x22, 0x28, 0x0a, 0x12, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x87, 0x01, 0x0a,
	0x15, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x43, 0x75, 0x6c,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3b, 0x0a, 0x13, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x22, 0x51, 0x0a, 0x10, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x0f, 0x43, 0x75, 0x6c, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x69, 0x31, 0x38,
	0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x31, 0x38, 0x6e,
	0x2e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x23, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x64, 0x0a, 0x0b, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x13, 0x43, 0x75, 0x6c, 0x74,
	0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75,
	0x6c, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0a, 0x63, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x12,
	0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x4d, 0x0a, 0x0f, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x22, 0x9e, 0x01, 0x0a, 0x12, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x4b,
	0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x69, 0x31, 0x38,
	0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x31, 0x38, 0x6e,
	0x2e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x10, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65,
	0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e,
	0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x69, 0x31, 0x38, 0x6e,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6a, 0x0a, 0x0e, 0x43, 0x75,
	0x6c, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x17, 0x43, 0x75, 0x6c, 0x74, 0x75,
	0x72, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a,
	0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79,
	0x22, 0x9d, 0x01, 0x0a, 0x15, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x31, 0x38, 0x6e,
	0x2e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x23, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x6f, 0x0a, 0x13, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x75, 0x6c, 0x74, 0x75,
	0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x75, 0x6c,
	0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x22, 0x75, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2d, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x0f, 0x43, 0x75, 0x6c, 0x74,
	0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x63, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x2a, 0x3d,
	0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x08, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x4f, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x10, 0x03, 0x2a, 0x9d, 0x01,
	0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10,
	0x02, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x61, 0x74, 0x61, 0x42, 0x61, 0x73, 0x65, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x61,
	0x74, 0x61, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0x08, 0x32, 0xec, 0x03,
	0x0a, 0x0b, 0x49, 0x31, 0x38, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a,
	0x0e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x15, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x43, 0x75,
	0x6c, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x52, 0x0a, 0x1b, 0x43,
	0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x19, 0x2e, 0x69, 0x31, 0x38,
	0x6e, 0x2e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x43, 0x75, 0x6c,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x4e, 0x0a, 0x1a, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x2e,
	0x69, 0x31, 0x38, 0x6e, 0x2e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x43,
	0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x5d, 0x0a, 0x1f, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x1d, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72,
	0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4e,
	0x0a, 0x13, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x41, 0x64, 0x64,
	0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x43, 0x75,
	0x6c, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4c,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x43, 0x75, 0x6c,
	0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x12, 0x5a, 0x07,
	0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x06, 0x47, 0x6f, 0x49, 0x31, 0x38, 0x6e,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_i18n_proto_rawDescOnce sync.Once
	file_i18n_proto_rawDescData = file_i18n_proto_rawDesc
)

func file_i18n_proto_rawDescGZIP() []byte {
	file_i18n_proto_rawDescOnce.Do(func() {
		file_i18n_proto_rawDescData = protoimpl.X.CompressGZIP(file_i18n_proto_rawDescData)
	})
	return file_i18n_proto_rawDescData
}

var file_i18n_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_i18n_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_i18n_proto_goTypes = []any{
	(ActionTypes)(0),                  // 0: i18n.ActionTypes
	(ReplyCode)(0),                    // 1: i18n.ReplyCode
	(*CultureCodeRequest)(nil),        // 2: i18n.CultureCodeRequest
	(*CultureResourcesReply)(nil),     // 3: i18n.CultureResourcesReply
	(*CultureResourceItem)(nil),       // 4: i18n.CultureResourceItem
	(*CultureBaseReply)(nil),          // 5: i18n.CultureBaseReply
	(*CulturesRequest)(nil),           // 6: i18n.CulturesRequest
	(*CulturesReply)(nil),             // 7: i18n.CulturesReply
	(*CultureItem)(nil),               // 8: i18n.CultureItem
	(*CultureTypesRequest)(nil),       // 9: i18n.CultureTypesRequest
	(*CulturesTypesReply)(nil),        // 10: i18n.CulturesTypesReply
	(*CultureTypeItem)(nil),           // 11: i18n.CultureTypeItem
	(*CultureKeysRequest)(nil),        // 12: i18n.CultureKeysRequest
	(*CultureKeysReply)(nil),          // 13: i18n.CultureKeysReply
	(*CultureKeyItem)(nil),            // 14: i18n.CultureKeyItem
	(*CultureKeyValuesRequest)(nil),   // 15: i18n.CultureKeyValuesRequest
	(*CultureKeyValuesReply)(nil),     // 16: i18n.CultureKeyValuesReply
	(*CultureKeyValueItem)(nil),       // 17: i18n.CultureKeyValueItem
	(*AddCultureKeyValueRequest)(nil), // 18: i18n.AddCultureKeyValueRequest
	(*CultureKeyValue)(nil),           // 19: i18n.CultureKeyValue
}
var file_i18n_proto_depIdxs = []int32{
	4,  // 0: i18n.CultureResourcesReply.items:type_name -> i18n.CultureResourceItem
	1,  // 1: i18n.CultureResourcesReply.code:type_name -> i18n.ReplyCode
	1,  // 2: i18n.CultureBaseReply.code:type_name -> i18n.ReplyCode
	0,  // 3: i18n.CulturesRequest.action:type_name -> i18n.ActionTypes
	8,  // 4: i18n.CulturesRequest.param_data:type_name -> i18n.CultureItem
	8,  // 5: i18n.CulturesReply.items:type_name -> i18n.CultureItem
	1,  // 6: i18n.CulturesReply.code:type_name -> i18n.ReplyCode
	0,  // 7: i18n.CultureTypesRequest.action:type_name -> i18n.ActionTypes
	11, // 8: i18n.CultureTypesRequest.param_data:type_name -> i18n.CultureTypeItem
	11, // 9: i18n.CulturesTypesReply.items:type_name -> i18n.CultureTypeItem
	1,  // 10: i18n.CulturesTypesReply.code:type_name -> i18n.ReplyCode
	0,  // 11: i18n.CultureKeysRequest.action:type_name -> i18n.ActionTypes
	14, // 12: i18n.CultureKeysRequest.param_data:type_name -> i18n.CultureKeyItem
	14, // 13: i18n.CultureKeysReply.items:type_name -> i18n.CultureKeyItem
	1,  // 14: i18n.CultureKeysReply.code:type_name -> i18n.ReplyCode
	0,  // 15: i18n.CultureKeyValuesRequest.action:type_name -> i18n.ActionTypes
	17, // 16: i18n.CultureKeyValuesRequest.param_data:type_name -> i18n.CultureKeyValueItem
	17, // 17: i18n.CultureKeyValuesReply.items:type_name -> i18n.CultureKeyValueItem
	1,  // 18: i18n.CultureKeyValuesReply.code:type_name -> i18n.ReplyCode
	19, // 19: i18n.AddCultureKeyValueRequest.values:type_name -> i18n.CultureKeyValue
	6,  // 20: i18n.I18nService.CultureFeature:input_type -> i18n.CulturesRequest
	9,  // 21: i18n.I18nService.CulturesResourceTypeFeature:input_type -> i18n.CultureTypesRequest
	12, // 22: i18n.I18nService.CulturesResourceKeyFeature:input_type -> i18n.CultureKeysRequest
	15, // 23: i18n.I18nService.CulturesResourceKeyValueFeature:input_type -> i18n.CultureKeyValuesRequest
	18, // 24: i18n.I18nService.AddResourceKeyValue:input_type -> i18n.AddCultureKeyValueRequest
	2,  // 25: i18n.I18nService.GetCultureResources:input_type -> i18n.CultureCodeRequest
	7,  // 26: i18n.I18nService.CultureFeature:output_type -> i18n.CulturesReply
	10, // 27: i18n.I18nService.CulturesResourceTypeFeature:output_type -> i18n.CulturesTypesReply
	13, // 28: i18n.I18nService.CulturesResourceKeyFeature:output_type -> i18n.CultureKeysReply
	16, // 29: i18n.I18nService.CulturesResourceKeyValueFeature:output_type -> i18n.CultureKeyValuesReply
	5,  // 30: i18n.I18nService.AddResourceKeyValue:output_type -> i18n.CultureBaseReply
	3,  // 31: i18n.I18nService.GetCultureResources:output_type -> i18n.CultureResourcesReply
	26, // [26:32] is the sub-list for method output_type
	20, // [20:26] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_i18n_proto_init() }
func file_i18n_proto_init() {
	if File_i18n_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_i18n_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CultureCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CultureResourcesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CultureResourceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CultureBaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CulturesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CulturesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CultureItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CultureTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CulturesTypesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CultureTypeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CultureKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CultureKeysReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CultureKeyItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CultureKeyValuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CultureKeyValuesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CultureKeyValueItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*AddCultureKeyValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_i18n_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CultureKeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_i18n_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_i18n_proto_goTypes,
		DependencyIndexes: file_i18n_proto_depIdxs,
		EnumInfos:         file_i18n_proto_enumTypes,
		MessageInfos:      file_i18n_proto_msgTypes,
	}.Build()
	File_i18n_proto = out.File
	file_i18n_proto_rawDesc = nil
	file_i18n_proto_goTypes = nil
	file_i18n_proto_depIdxs = nil
}
